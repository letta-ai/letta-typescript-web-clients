{
  "properties": {
    "agent_type": { "type": "string", "title": "Agent Type" },
    "core_memory": {
      "items": {
        "properties": {
          "created_at": { "type": "string", "title": "Created At" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "is_template": { "type": "boolean", "title": "Is Template" },
          "label": { "type": "string", "title": "Label" },
          "limit": { "type": "integer", "title": "Limit" },
          "metadata_": {
            "anyOf": [
              { "additionalProperties": true, "type": "object" },
              { "type": "null" }
            ],
            "title": "Metadata"
          },
          "template_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Template Name"
          },
          "updated_at": { "type": "string", "title": "Updated At" },
          "value": { "type": "string", "title": "Value" }
        },
        "type": "object",
        "required": [
          "created_at",
          "description",
          "is_template",
          "label",
          "limit",
          "template_name",
          "updated_at",
          "value"
        ],
        "title": "CoreMemoryBlockSchema",
        "x-readme-ref-name": "CoreMemoryBlockSchema"
      },
      "type": "array",
      "title": "Core Memory"
    },
    "created_at": { "type": "string", "title": "Created At" },
    "description": {
      "anyOf": [{ "type": "string" }, { "type": "null" }],
      "title": "Description"
    },
    "embedding_config": {
      "properties": {
        "embedding_endpoint_type": {
          "type": "string",
          "enum": [
            "openai",
            "anthropic",
            "bedrock",
            "cohere",
            "google_ai",
            "google_vertex",
            "azure",
            "groq",
            "ollama",
            "webui",
            "webui-legacy",
            "lmstudio",
            "lmstudio-legacy",
            "llamacpp",
            "koboldcpp",
            "vllm",
            "hugging-face",
            "mistral",
            "together"
          ],
          "title": "Embedding Endpoint Type",
          "description": "The endpoint type for the model."
        },
        "embedding_endpoint": {
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "title": "Embedding Endpoint",
          "description": "The endpoint for the model (`None` if local)."
        },
        "embedding_model": {
          "type": "string",
          "title": "Embedding Model",
          "description": "The model for the embedding."
        },
        "embedding_dim": {
          "type": "integer",
          "title": "Embedding Dim",
          "description": "The dimension of the embedding."
        },
        "embedding_chunk_size": {
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "title": "Embedding Chunk Size",
          "description": "The chunk size of the embedding.",
          "default": 300
        },
        "handle": {
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "title": "Handle",
          "description": "The handle for this config, in the format provider/model-name."
        },
        "azure_endpoint": {
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "title": "Azure Endpoint",
          "description": "The Azure endpoint for the model."
        },
        "azure_version": {
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "title": "Azure Version",
          "description": "The Azure version for the model."
        },
        "azure_deployment": {
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "title": "Azure Deployment",
          "description": "The Azure deployment for the model."
        }
      },
      "type": "object",
      "required": [
        "embedding_endpoint_type",
        "embedding_model",
        "embedding_dim"
      ],
      "title": "EmbeddingConfig",
      "description": "Embedding model configuration. This object specifies all the information necessary to access an embedding model to usage with Letta, except for secret keys.\n\nAttributes:\n    embedding_endpoint_type (str): The endpoint type for the model.\n    embedding_endpoint (str): The endpoint for the model.\n    embedding_model (str): The model for the embedding.\n    embedding_dim (int): The dimension of the embedding.\n    embedding_chunk_size (int): The chunk size of the embedding.\n    azure_endpoint (:obj:`str`, optional): The Azure endpoint for the model (Azure only).\n    azure_version (str): The Azure version for the model (Azure only).\n    azure_deployment (str): The Azure deployment for the model (Azure only).",
      "x-readme-ref-name": "EmbeddingConfig"
    },
    "llm_config": {
      "properties": {
        "model": {
          "type": "string",
          "title": "Model",
          "description": "LLM model name. "
        },
        "model_endpoint_type": {
          "type": "string",
          "enum": [
            "openai",
            "anthropic",
            "cohere",
            "google_ai",
            "google_vertex",
            "azure",
            "groq",
            "ollama",
            "webui",
            "webui-legacy",
            "lmstudio",
            "lmstudio-legacy",
            "lmstudio-chatcompletions",
            "llamacpp",
            "koboldcpp",
            "vllm",
            "hugging-face",
            "mistral",
            "together",
            "bedrock",
            "deepseek",
            "xai"
          ],
          "title": "Model Endpoint Type",
          "description": "The endpoint type for the model."
        },
        "model_endpoint": {
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "title": "Model Endpoint",
          "description": "The endpoint for the model."
        },
        "model_wrapper": {
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "title": "Model Wrapper",
          "description": "The wrapper for the model."
        },
        "context_window": {
          "type": "integer",
          "title": "Context Window",
          "description": "The context window size for the model."
        },
        "put_inner_thoughts_in_kwargs": {
          "anyOf": [{ "type": "boolean" }, { "type": "null" }],
          "title": "Put Inner Thoughts In Kwargs",
          "description": "Puts 'inner_thoughts' as a kwarg in the function call if this is set to True. This helps with function calling performance and also the generation of inner thoughts.",
          "default": true
        },
        "handle": {
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "title": "Handle",
          "description": "The handle for this config, in the format provider/model-name."
        },
        "temperature": {
          "type": "number",
          "title": "Temperature",
          "description": "The temperature to use when generating text with the model. A higher temperature will result in more random text.",
          "default": 0.7
        },
        "max_tokens": {
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "title": "Max Tokens",
          "description": "The maximum number of tokens to generate. If not set, the model will use its default value.",
          "default": 4096
        },
        "enable_reasoner": {
          "type": "boolean",
          "title": "Enable Reasoner",
          "description": "Whether or not the model should use extended thinking if it is a 'reasoning' style model",
          "default": false
        },
        "max_reasoning_tokens": {
          "type": "integer",
          "title": "Max Reasoning Tokens",
          "description": "Configurable thinking budget for extended thinking, only used if enable_reasoner is True. Minimum value is 1024.",
          "default": 0
        }
      },
      "type": "object",
      "required": ["model", "model_endpoint_type", "context_window"],
      "title": "LLMConfig",
      "description": "Configuration for a Language Model (LLM) model. This object specifies all the information necessary to access an LLM model to usage with Letta, except for secret keys.\n\nAttributes:\n    model (str): The name of the LLM model.\n    model_endpoint_type (str): The endpoint type for the model.\n    model_endpoint (str): The endpoint for the model.\n    model_wrapper (str): The wrapper for the model. This is used to wrap additional text around the input/output of the model. This is useful for text-to-text completions, such as the Completions API in OpenAI.\n    context_window (int): The context window size for the model.\n    put_inner_thoughts_in_kwargs (bool): Puts `inner_thoughts` as a kwarg in the function call if this is set to True. This helps with function calling performance and also the generation of inner thoughts.\n    temperature (float): The temperature to use when generating text with the model. A higher temperature will result in more random text.\n    max_tokens (int): The maximum number of tokens to generate.",
      "x-readme-ref-name": "LLMConfig"
    },
    "message_buffer_autoclear": {
      "type": "boolean",
      "title": "Message Buffer Autoclear"
    },
    "in_context_message_indices": {
      "items": { "type": "integer" },
      "type": "array",
      "title": "In Context Message Indices"
    },
    "messages": {
      "items": {
        "properties": {
          "created_at": { "type": "string", "title": "Created At" },
          "group_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Group Id"
          },
          "model": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Model"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "role": { "type": "string", "title": "Role" },
          "content": {
            "items": {
              "properties": {
                "type": {
                  "type": "string",
                  "const": "text",
                  "title": "Type",
                  "description": "The type of the message.",
                  "default": "text",
                  "enum": ["text"]
                },
                "text": {
                  "type": "string",
                  "title": "Text",
                  "description": "The text content of the message."
                }
              },
              "type": "object",
              "required": ["text", "type", "type", "type"],
              "title": "TextContent",
              "x-readme-ref-name": "TextContent"
            },
            "type": "array",
            "title": "Content"
          },
          "tool_call_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Tool Call Id"
          },
          "tool_calls": { "items": {}, "type": "array", "title": "Tool Calls" },
          "tool_returns": {
            "items": {},
            "type": "array",
            "title": "Tool Returns"
          },
          "updated_at": { "type": "string", "title": "Updated At" }
        },
        "type": "object",
        "required": [
          "created_at",
          "group_id",
          "model",
          "name",
          "role",
          "content",
          "tool_call_id",
          "tool_calls",
          "tool_returns",
          "updated_at"
        ],
        "title": "MessageSchema",
        "x-readme-ref-name": "MessageSchema"
      },
      "type": "array",
      "title": "Messages"
    },
    "metadata_": {
      "anyOf": [
        { "additionalProperties": true, "type": "object" },
        { "type": "null" }
      ],
      "title": "Metadata"
    },
    "multi_agent_group": {
      "anyOf": [{}, { "type": "null" }],
      "title": "Multi Agent Group"
    },
    "name": { "type": "string", "title": "Name" },
    "system": { "type": "string", "title": "System" },
    "tags": {
      "items": {
        "properties": { "tag": { "type": "string", "title": "Tag" } },
        "type": "object",
        "required": ["tag"],
        "title": "TagSchema",
        "x-readme-ref-name": "TagSchema"
      },
      "type": "array",
      "title": "Tags"
    },
    "tool_exec_environment_variables": {
      "items": {
        "properties": {
          "created_at": { "type": "string", "title": "Created At" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "key": { "type": "string", "title": "Key" },
          "updated_at": { "type": "string", "title": "Updated At" },
          "value": { "type": "string", "title": "Value" }
        },
        "type": "object",
        "required": ["created_at", "description", "key", "updated_at", "value"],
        "title": "ToolEnvVarSchema",
        "x-readme-ref-name": "ToolEnvVarSchema"
      },
      "type": "array",
      "title": "Tool Exec Environment Variables"
    },
    "tool_rules": {
      "items": {
        "anyOf": [
          {
            "properties": {
              "tool_name": { "type": "string", "title": "Tool Name" },
              "type": { "type": "string", "title": "Type" }
            },
            "type": "object",
            "required": ["tool_name", "type"],
            "title": "BaseToolRuleSchema",
            "x-readme-ref-name": "BaseToolRuleSchema"
          },
          {
            "properties": {
              "tool_name": { "type": "string", "title": "Tool Name" },
              "type": { "type": "string", "title": "Type" },
              "children": {
                "items": { "type": "string" },
                "type": "array",
                "title": "Children"
              }
            },
            "type": "object",
            "required": ["tool_name", "type", "children"],
            "title": "ChildToolRuleSchema",
            "x-readme-ref-name": "ChildToolRuleSchema"
          },
          {
            "properties": {
              "tool_name": { "type": "string", "title": "Tool Name" },
              "type": { "type": "string", "title": "Type" },
              "max_count_limit": {
                "type": "integer",
                "title": "Max Count Limit"
              }
            },
            "type": "object",
            "required": ["tool_name", "type", "max_count_limit"],
            "title": "MaxCountPerStepToolRuleSchema",
            "x-readme-ref-name": "MaxCountPerStepToolRuleSchema"
          },
          {
            "properties": {
              "tool_name": { "type": "string", "title": "Tool Name" },
              "type": { "type": "string", "title": "Type" },
              "default_child": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "title": "Default Child"
              },
              "child_output_mapping": {
                "additionalProperties": { "type": "string" },
                "type": "object",
                "title": "Child Output Mapping"
              },
              "require_output_mapping": {
                "type": "boolean",
                "title": "Require Output Mapping"
              }
            },
            "type": "object",
            "required": [
              "tool_name",
              "type",
              "default_child",
              "child_output_mapping",
              "require_output_mapping"
            ],
            "title": "ConditionalToolRuleSchema",
            "x-readme-ref-name": "ConditionalToolRuleSchema"
          }
        ]
      },
      "type": "array",
      "title": "Tool Rules"
    },
    "tools": {
      "items": {
        "properties": {
          "args_json_schema": {
            "anyOf": [{}, { "type": "null" }],
            "title": "Args Json Schema"
          },
          "created_at": { "type": "string", "title": "Created At" },
          "description": { "type": "string", "title": "Description" },
          "json_schema": {
            "properties": {
              "name": { "type": "string", "title": "Name" },
              "description": { "type": "string", "title": "Description" },
              "parameters": {
                "properties": {
                  "type": {
                    "anyOf": [{ "type": "string" }, { "type": "null" }],
                    "title": "Type",
                    "default": "object"
                  },
                  "properties": {
                    "additionalProperties": {
                      "properties": {
                        "type": { "type": "string", "title": "Type" },
                        "description": {
                          "anyOf": [{ "type": "string" }, { "type": "null" }],
                          "title": "Description"
                        }
                      },
                      "type": "object",
                      "required": ["type"],
                      "title": "ParameterProperties",
                      "x-readme-ref-name": "ParameterProperties"
                    },
                    "type": "object",
                    "title": "Properties"
                  },
                  "required": {
                    "items": { "type": "string" },
                    "type": "array",
                    "title": "Required"
                  }
                },
                "type": "object",
                "required": ["properties"],
                "title": "ParametersSchema",
                "x-readme-ref-name": "ParametersSchema"
              },
              "type": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "title": "Type"
              },
              "required": {
                "anyOf": [
                  { "items": { "type": "string" }, "type": "array" },
                  { "type": "null" }
                ],
                "title": "Required"
              }
            },
            "type": "object",
            "required": ["name", "description", "parameters"],
            "title": "ToolJSONSchema",
            "x-readme-ref-name": "ToolJSONSchema"
          },
          "name": { "type": "string", "title": "Name" },
          "return_char_limit": {
            "type": "integer",
            "title": "Return Char Limit"
          },
          "source_code": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Source Code"
          },
          "source_type": { "type": "string", "title": "Source Type" },
          "tags": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Tags"
          },
          "tool_type": { "type": "string", "title": "Tool Type" },
          "updated_at": { "type": "string", "title": "Updated At" },
          "metadata_": {
            "anyOf": [
              { "additionalProperties": true, "type": "object" },
              { "type": "null" }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "args_json_schema",
          "created_at",
          "description",
          "json_schema",
          "name",
          "return_char_limit",
          "source_code",
          "source_type",
          "tags",
          "tool_type",
          "updated_at"
        ],
        "title": "ToolSchema",
        "x-readme-ref-name": "ToolSchema"
      },
      "type": "array",
      "title": "Tools"
    },
    "updated_at": { "type": "string", "title": "Updated At" },
    "version": { "type": "string", "title": "Version" }
  },
  "type": "object",
  "required": [
    "agent_type",
    "core_memory",
    "created_at",
    "description",
    "embedding_config",
    "llm_config",
    "message_buffer_autoclear",
    "in_context_message_indices",
    "messages",
    "multi_agent_group",
    "name",
    "system",
    "tags",
    "tool_exec_environment_variables",
    "tool_rules",
    "tools",
    "updated_at",
    "version"
  ],
  "title": "AgentSchema",
  "x-readme-ref-name": "AgentSchema"
}
