/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios';
import type {
  DeleteRunMutationResponse,
  DeleteRunPathParams,
  DeleteRun422,
} from '../../types/DeleteRun.ts';
import type {
  RequestConfig,
  ResponseConfig,
  ResponseErrorConfig,
} from '@kubb/plugin-client/clients/axios';
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query';
import { useMutation } from '@tanstack/react-query';

export const deleteRunMutationKey = () =>
  [{ url: '/v1/runs/{run_id}' }] as const;

export type DeleteRunMutationKey = ReturnType<typeof deleteRunMutationKey>;

/**
 * @description Delete a run by its run_id.
 * @summary Delete Run
 * {@link /v1/runs/:run_id}
 */
export async function deleteRun(
  run_id: DeleteRunPathParams['run_id'],
  config: Partial<RequestConfig> & { client?: typeof client } = {}
) {
  const { client: request = client, ...requestConfig } = config;

  const res = await request<
    DeleteRunMutationResponse,
    ResponseErrorConfig<DeleteRun422>,
    unknown
  >({
    method: 'DELETE',
    url: `/v1/runs/${run_id}`,
    ...requestConfig,
  });
  return res;
}

/**
 * @description Delete a run by its run_id.
 * @summary Delete Run
 * {@link /v1/runs/:run_id}
 */
export function useDeleteRun<TContext>(
  options: {
    mutation?: UseMutationOptions<
      ResponseConfig<DeleteRunMutationResponse>,
      ResponseErrorConfig<DeleteRun422>,
      { run_id: DeleteRunPathParams['run_id'] },
      TContext
    > & { client?: QueryClient };
    client?: Partial<RequestConfig> & { client?: typeof client };
  } = {}
) {
  const {
    mutation: { client: queryClient, ...mutationOptions } = {},
    client: config = {},
  } = options ?? {};
  const mutationKey = mutationOptions?.mutationKey ?? deleteRunMutationKey();

  return useMutation<
    ResponseConfig<DeleteRunMutationResponse>,
    ResponseErrorConfig<DeleteRun422>,
    { run_id: DeleteRunPathParams['run_id'] },
    TContext
  >(
    {
      mutationFn: async ({ run_id }) => {
        return deleteRun(run_id, config);
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient
  );
}
