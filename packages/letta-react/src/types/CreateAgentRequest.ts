/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { AgentType } from './AgentType.ts'
import type { ChildToolRule } from './ChildToolRule.ts'
import type { ConditionalToolRule } from './ConditionalToolRule.ts'
import type { ContinueToolRule } from './ContinueToolRule.ts'
import type { CreateBlock } from './CreateBlock.ts'
import type { EmbeddingConfig } from './EmbeddingConfig.ts'
import type { InitToolRule } from './InitToolRule.ts'
import type { LLMConfig } from './LLMConfig.ts'
import type { MaxCountPerStepToolRule } from './MaxCountPerStepToolRule.ts'
import type { MessageCreate } from './MessageCreate.ts'
import type { ParentToolRule } from './ParentToolRule.ts'
import type { TerminalToolRule } from './TerminalToolRule.ts'

/**
 * @description CreateAgent model specifically for POST request body, excluding user_id which comes from headers
 */
export type CreateAgentRequest = {
  /**
   * @description The name of the agent.
   * @type string | undefined
   */
  name?: string
  /**
   * @description The blocks to create in the agent\'s in-context memory.
   */
  memory_blocks?: CreateBlock[] | null
  /**
   * @description The tools used by the agent.
   */
  tools?: string[] | null
  /**
   * @description The ids of the tools used by the agent.
   */
  tool_ids?: string[] | null
  /**
   * @description The ids of the sources used by the agent.
   */
  source_ids?: string[] | null
  /**
   * @description The ids of the blocks used by the agent.
   */
  block_ids?: string[] | null
  /**
   * @description The tool rules governing the agent.
   */
  tool_rules?: (ChildToolRule | InitToolRule | TerminalToolRule | ConditionalToolRule | ContinueToolRule | MaxCountPerStepToolRule | ParentToolRule)[] | null
  /**
   * @description The tags associated with the agent.
   */
  tags?: string[] | null
  /**
   * @description The system prompt used by the agent.
   */
  system?: string | null
  /**
   * @type string | undefined
   */
  agent_type?: AgentType
  /**
   * @description The LLM configuration used by the agent.
   */
  llm_config?: LLMConfig | null
  /**
   * @description The embedding configuration used by the agent.
   */
  embedding_config?: EmbeddingConfig | null
  /**
   * @description The initial set of messages to put in the agent\'s in-context memory.
   */
  initial_message_sequence?: MessageCreate[] | null
  /**
   * @description If true, attaches the Letta core tools (e.g. archival_memory and core_memory related functions).
   * @default true
   * @type boolean | undefined
   */
  include_base_tools?: boolean
  /**
   * @description If true, attaches the Letta multi-agent tools (e.g. sending a message to another agent).
   * @default false
   * @type boolean | undefined
   */
  include_multi_agent_tools?: boolean
  /**
   * @description If true, attaches the Letta base tool rules (e.g. deny all tools not explicitly allowed).
   * @default true
   * @type boolean | undefined
   */
  include_base_tool_rules?: boolean
  /**
   * @description The description of the agent.
   */
  description?: string | null
  /**
   * @description The metadata of the agent.
   */
  metadata?: {
    [key: string]: any
  } | null
  /**
   * @description The LLM configuration handle used by the agent, specified in the format provider/model-name, as an alternative to specifying llm_config.
   */
  model?: string | null
  /**
   * @description The embedding configuration handle used by the agent, specified in the format provider/model-name.
   */
  embedding?: string | null
  /**
   * @description The context window limit used by the agent.
   */
  context_window_limit?: number | null
  /**
   * @description The embedding chunk size used by the agent.
   * @default 300
   */
  embedding_chunk_size?: number | null
  /**
   * @description The maximum number of tokens to generate, including reasoning step. If not set, the model will use its default value.
   */
  max_tokens?: number | null
  /**
   * @description The maximum number of tokens to generate for reasoning step. If not set, the model will use its default value.
   */
  max_reasoning_tokens?: number | null
  /**
   * @description Whether to enable internal extended thinking step for a reasoner model.
   * @default false
   */
  enable_reasoner?: boolean | null
  /**
   * @description The template id used to configure the agent
   */
  from_template?: string | null
  /**
   * @description Whether the agent is a template
   * @default false
   * @type boolean | undefined
   */
  template?: boolean
  /**
   * @description Deprecated: Project should now be passed via the X-Project header instead of in the request body. If using the sdk, this can be done via the new x_project field below.
   * @deprecated
   */
  project?: string | null
  /**
   * @description The environment variables for tool execution specific to this agent.
   */
  tool_exec_environment_variables?: {
    [key: string]: string
  } | null
  /**
   * @description The variables that should be set for the agent.
   */
  memory_variables?: {
    [key: string]: string
  } | null
  /**
   * @description The id of the project the agent belongs to.
   */
  project_id?: string | null
  /**
   * @description The id of the template the agent belongs to.
   */
  template_id?: string | null
  /**
   * @description The base template id of the agent.
   */
  base_template_id?: string | null
  /**
   * @description The ids of the identities associated with this agent.
   */
  identity_ids?: string[] | null
  /**
   * @description If set to True, the agent will not remember previous messages (though the agent will still retain state via core memory blocks and archival/recall memory). Not recommended unless you have an advanced use case.
   * @default false
   * @type boolean | undefined
   */
  message_buffer_autoclear?: boolean
  /**
   * @description If set to True, memory management will move to a background agent thread.
   */
  enable_sleeptime?: boolean | null
}