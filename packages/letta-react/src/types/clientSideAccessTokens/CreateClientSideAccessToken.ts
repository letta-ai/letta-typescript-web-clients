/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

export const policyVersionEnum = {
  '1': '1',
} as const;

export type PolicyVersionEnum =
  (typeof policyVersionEnum)[keyof typeof policyVersionEnum];

export const dataTypeEnum = {
  agent: 'agent',
} as const;

export type DataTypeEnum = (typeof dataTypeEnum)[keyof typeof dataTypeEnum];

export const dataAccessEnum = {
  read_messages: 'read_messages',
  write_messages: 'write_messages',
  read_agent: 'read_agent',
  write_agent: 'write_agent',
} as const;

export type DataAccessEnum =
  (typeof dataAccessEnum)[keyof typeof dataAccessEnum];

/**
 * @description 201
 */
export type ClientSideAccessTokensCreateClientSideAccessToken201 = {
  /**
   * @type object
   */
  policy: {
    /**
     * @type string
     */
    version: PolicyVersionEnum;
    /**
     * @type array
     */
    data: {
      /**
       * @type string
       */
      type: DataTypeEnum;
      /**
       * @type string
       */
      id: string;
      /**
       * @type array
       */
      access: DataAccessEnum[];
    }[];
  };
  /**
   * @type string
   */
  token: string;
  /**
   * @type string
   */
  hostname: string;
  /**
   * @type string
   */
  expiresAt: string;
};

/**
 * @description 400
 */
export type ClientSideAccessTokensCreateClientSideAccessToken400 = {
  /**
   * @type string
   */
  message: string;
};

export const policyTypeEnum = {
  agent: 'agent',
} as const;

export type PolicyTypeEnum =
  (typeof policyTypeEnum)[keyof typeof policyTypeEnum];

export const policyAccessEnum = {
  read_messages: 'read_messages',
  write_messages: 'write_messages',
  read_agent: 'read_agent',
  write_agent: 'write_agent',
} as const;

export type PolicyAccessEnum =
  (typeof policyAccessEnum)[keyof typeof policyAccessEnum];

/**
 * @description Body
 */
export type ClientSideAccessTokensCreateClientSideAccessTokenMutationRequest = {
  /**
   * @type array
   */
  policy: {
    /**
     * @type string
     */
    type: PolicyTypeEnum;
    /**
     * @type string
     */
    id: string;
    /**
     * @type array
     */
    access: PolicyAccessEnum[];
  }[];
  /**
   * @description The hostname of the client side application. Please specify the full URL including the protocol (http or https).
   * @type string, uri
   */
  hostname: string;
  /**
   * @description The expiration date of the token. If not provided, the token will expire in 5 minutes
   * @type string | undefined
   */
  expires_at?: string;
};

export type ClientSideAccessTokensCreateClientSideAccessTokenMutationResponse =
  ClientSideAccessTokensCreateClientSideAccessToken201;

export type ClientSideAccessTokensCreateClientSideAccessTokenMutation = {
  Response: ClientSideAccessTokensCreateClientSideAccessToken201;
  Request: ClientSideAccessTokensCreateClientSideAccessTokenMutationRequest;
  Errors: ClientSideAccessTokensCreateClientSideAccessToken400;
};
